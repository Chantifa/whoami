openapi: 3.0.0
info:
  title: Who am I
  description: Multiplayer Game developed by FFHS - Ramona Koksa | Yves Bastian Pellaton
  version: 1.0.0

security:
  - bearerAuth: []

servers:
  - url: http://localhost:5000/doc/

paths:
  /api/register:
    post:
      tags:
        - UserAuth
      summary: Register a new user
      operationId: register
      parameters:
        - in: body
          name: user
          description: "User object that needs to be added to the mongodb"
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "500":
          description: "Internal Server Error"
        "409":
          description: "Conflict"
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  result:
                    type: object
                    $ref: "#/definitions/UserResult"

  /api/login:
    get:
      tags:
        - UserAuth
      summary: Login an existing user
      operationId: login
      parameters:
        - in: body
          name: user
          description: "User object that needs to be added to the mongodb"
          required: true
          schema:
            $ref: "#/definitions/Login"
      responses:
        "500":
          description: "Internal Server Error"
        "422":
          description: "Unprocessable Entity"
        "404":
          description: "Not found"
        "401":
          description: "Unauthorized"
        "200":
          description: "successful"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ
                  message:
                    type: object
                    $ref: "#/definitions/LoginResult"

  /api/games:
    get:
      tags:
        - Game
      summary: Returns game rooms for connecting a game
      operationId: games
      responses:
        "500":
          description: "Internal Server Error"
        "200":
          description: "successful"
          content:
            application/json:
              schema:
                type: object
                $ref: "#/definitions/GameResult"

  /api/userinfo:
    get:
      tags:
        - Game
      summary: Get user info
      operationId: userinfo
      parameters:
        - in: path
          name: userId
          schema:
            type: integer
          required: true
          description: Numeric ID of the user to get
      responses:
        "500":
          description: "Internal Server Error"
        "404":
          description: "Not found"
        "200":
          description: "successful"
          content:
            application/json:
              schema:
                type: object
                $ref: "#/definitions/UserInfoResult"

  /api/ranking:
    get:
      tags:
        - Game
      summary: Get ranking info
      operationId: ranking
      responses:
        "500":
          description: "Internal Server Error"
        "404":
          description: "Not found"
        "200":
          description: "successful"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  $ref: "#/definitions/UserInfoResult"

definitions:
  User:
    type: object
    properties:
      name:
        type: string
        example: John
      email:
        type: string
        example: john.doe@whoami.com
      password:
        type: string
        example: $2b$10$6p1LMZEtPNyQ50XvuJe4xOHEKBe4Td5gsqDefjZb3EHAH04ni/216
      password_confirmation:
        type: string
        example: $2b$10$6p1LMZEtPNyQ50XvuJe4xOHEKBe4Td5gsqDefjZb3EHAH04ni/216
  UserResult:
    type: object
    properties:
      name:
        type: string
        example: John
      email:
        type: string
        example: john.doe@whoami.com
      password:
        type: string
        example: $2b$10$6p1LMZEtPNyQ50XvuJe4xOHEKBe4Td5gsqDefjZb3EHAH04ni/216
      _id:
        type: string
        example: 6175609939ccbef4c4067693
      createdAt:
        type: string
        format: date-time
        example: "2021-10-24T13:33:13.905Z"
      updatedAt:
        type: string
        format: date-time
        example: "2021-10-24T13:33:13.905Z"
  Login:
    type: object
    properties:
      email:
        type: string
        example: john.doe@whoami.com
      password:
        type: string
        example: $2b$10$6p1LMZEtPNyQ50XvuJe4xOHEKBe4Td5gsqDefjZb3EHAH04ni/216
  LoginResult:
    type: object
    properties:
      _id:
        type: string
        example: 617559d1c4de4c3ffe5079b9
      name:
        type: string
        example: John
      email:
        type: string
        example: john.doe@whoami.com
      password:
        type: string
        example: Test123
      createdAt:
        type: string
        format: date-time
        example: "2021-10-24T13:33:13.905Z"
      updatedAt:
        type: string
        format: date-time
        example: "2021-10-24T13:33:13.905Z"
      __v:
        type: integer
  GameResult:
    type: object
    properties:
      roomName:
        type: string
        example: 72282618
      phase:
        type: string
        example: FINISHED
      players:
        type: array
        example: ["Tom", "Jerry"]
        items:
          type: string
      viewers:
        type: array
        example: ["John", "Lisa"]
        items:
          type: string
  UserInfoResult:
    type: object
    properties:
      _id:
        type: string
        example: 619a194e8c254fdca8640b03
      userId:
        type: string
        example: 617559d1c4de4c3ffe5079b9
      name:
        type: string
        example: John
      gamesFinished:
        type: integer
      gamesStarted:
        type: integer
      gamesWon:
        type: integer
      createdAt:
        type: string
        format: date-time
        example: "2021-10-24T13:33:13.905Z"
      updatedAt:
        type: string
        format: date-time
        example: "2021-10-24T13:33:13.905Z"
      __v:
        type: integer


components:
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT    # optional, arbitrary value for documentation purposes